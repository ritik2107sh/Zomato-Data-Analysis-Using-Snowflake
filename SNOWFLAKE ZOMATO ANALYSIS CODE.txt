Create database Zomato_analysis
use Zomato_analysis

----------------------------------------------EXPLORATORY DATA ANALYSIS------------------------------------
Select * from ZOMATO;
select * from COUNTRY_CODE
--count the rows in the Zomato table
select Count(*)from ZOMATO;

--column name and the data type
SELECT 
COLUMN_NAME, 
DATA_TYPE 
FROM INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME = 'ZOMATO'




--checking for the duplicates in data
select RESTAURANTID,COUNT(RESTAURANTID)  from ZOMATO
GROUP BY RESTAURANTID
HAVING COUNT(RESTAURANTID) >=2

--JOINING COUNTRY CODE WITH ZOMATO
SELECT * FROM ZOMATO AS Z
LEFT JOIN COUNTRY_CODE AS C
ON Z.COUNTRYCODE = C.COUNTRYCODE


--UPDATE TABLE AND ADD COUNTRY NAME COLUMN IN IT
ALTER TABLE ZOMATO 
ADD COLUMN COUNTRYNAME VARCHAR(40)

ALTER TABLE ZOMATO 
DROP COUNTRYNAME

SELECT * FROM ZOMATO

--NOW UPDATING THE TABLE WITH VALUES FROM COUNTRYCODE TABLE
UPDATE Zomato
SET COUNTRYNAME = (
    SELECT COUNTRY
    FROM COUNTRY_CODE
    WHERE COUNTRY_CODE.COUNTRYCODE = Zomato.COUNTRYCODE)

UPDATE ZOMATO 
SET ZOMATO.COUNTRYNAME = C.COUNTRY FROM Zomato AS Z
INNER JOIN COUNTRY_CODE C ON Z.COUNTRYCODE = C.COUNTRYCODE;

SELECT * FROM COUNTRY_CODE
--CHECKING IF ANY COUNTRY NAME IS MISSING OR WRONG COUNTRYCODE
SELECT * FROM (
SELECT * FROM ZOMATO AS Z
LEFT JOIN COUNTRY_CODE AS C
ON Z.COUNTRYCODE = C.COUNTRYCODE
) WHERE COUNTRY IS NULL
\
--CORRECTING THE ERROR DATA IN RESTAURANTNAME
COLUMN

SELECT RESTAURANTNAME FROM ZOMATO WHERE RESTAURANTNAME LIKE '%?%'

UPDATE ZOMATO 
SET RESTAURANTNAME = REPLACE(RESTAURANTNAME,'?','e')
WHERE RESTAURANTNAME LIKE '%?%';



--CORRECTING THE ERROR DATA IN CITY COLUMN


SELECT DISTINCT City FROM ZOMATO 
WHERE CITY LIKE '%?%'

SELECT REPLACE(CITY,'?','i') 
FROM ZOMATO WHERE CITY LIKE '%?%'

UPDATE ZOMATO
SET City = REPLACE(ZOMATO.City, '?', 'i')
WHERE ZOMATO.City LIKE '%?%';

SELECT CITY FROM ZOMATO

-- COUNTING TOTAL REST. IN EACH CITY OF PARTICULAR COUNTRY
SELECT C.COUNTRY, Z.CITY, COUNT([City]) AS TOTAL_REST							  
FROM ZOMATO AS Z LEFT JOIN COUNTRY_CODE AS C
ON Z.COUNTRYCODE = C.COUNTRYCODE
GROUP BY C.COUNTRY, Z.CITY 
ORDER BY TOTAL_REST  DESC

--LOCALITY COLUMN
SELECT CITY,Locality, COUNT(Locality) COUNT_LOCALITY,											
SUM(COUNT(Locality)) OVER(PARTITION BY City ORDER BY CITY,Locality) AS ROLLING_COUNT
FROM ZOMATO
WHERE COUNTRYCODE = (SELECT COUNTRYCODE FROM COUNTRY_CODE WHERE COUNTRY = 'India')
GROUP BY Locality, CITY
ORDER BY 1,2,3 DESC

--DROP COLUMN that are not neccessary
ALTER TABLE ZOMATO DROP COLUMN Address
ALTER TABLE ZOMATO DROP COLUMN LocalityVerbose

--CUISINES COLUMN CHECKING
SELECT CUISINES FROM ZOMATO
SELECT * FROM ZOMATO WHERE CUISINES IS NULL
--SO THERE ARE 9 RESTAURANT WHERE CUISINES IS NULL

--CURRENCY COLUMN 
SELECT CURRENCY , COUNT(CURRENCY) AS COUNTS FROM ZOMATO
GROUP BY CURRENCY
--SO THERE ARE 12 DISTINCT CURRENCY AND POUNDS SIGN IS MISSING

UPDATE ZOMATO
SET CURRENCY= REPLACE(ZOMATO.CURRENCY, '?', 'Â£')
WHERE ZOMATO.CURRENCY LIKE '%?%';

SELECT DISTINCT CURRENCY FROM ZOMATO;

--NOW WE ARE HAVING 4 BOOLEAN COLUMN LETS CHECK THEM

SELECT DISTINCT(Has_Table_booking) FROM ZOMATO;

SELECT DISTINCT(Has_Online_delivery) FROM ZOMATO;

SELECT DISTINCT(Is_delivering_now) FROM ZOMATO;

SELECT DISTINCT(Switch_to_order_menu) FROM ZOMATO;
--Switch_to_order_menu HAS ONLY FLASE IN EACH ROW SO IT IS OF NO USE IN ANALYSIS
ALTER TABLE ZOMATO
DROP COLUMN Switch_to_order_menu

SELECT * FROM ZOMATO

--PRICE RANGE COLUMN
SELECT DISTINCT PRICE_RANGE FROM ZOMATO

--VOTING COLUMN

SELECT RESTAURANTID, VOTES FROM ZOMATO ORDER BY VOTES DESC
--MAX VOTE
SELECT MAX(VOTES)AS MAXI_VOTE_REST FROM ZOMATO ;
SELECT MIN(VOTES)AS MAXI_VOTE_REST FROM ZOMATO ;
SELECT AVG(VOTES)AS MAXI_VOTE_REST FROM ZOMATO ;
SELECT MEDIAN(VOTES)AS MAXI_VOTE_REST FROM ZOMATO ;

--COST COLUMN
SELECT AVERAGE_COST_FOR_TWO FROM ZOMATO ;
SELECT MAX(AVERAGE_COST_FOR_TWO) FROM ZOMATO ;
SELECT MIN(AVERAGE_COST_FOR_TWO) FROM ZOMATO ;

SELECT RESTAURANTID FROM ZOMATO WHERE AVERAGE_COST_FOR_TWO = 0
--18 REST. HAS 0 AVERAGE_COST_FOR_TWO 

--RATING COLUMN
SELECT MIN(Rating) AS MIN_RATING,ROUND(AVG(CAST(Rating AS DECIMAL)),1) AS AVG_RATING, MAX(Rating) AS MAX_RATING
FROM ZOMATO
SELECT RATING FROM ZOMATO


--CREATING A COLUMN TO CLASSIFY THE REST. BASED ON RATING

ALTER TABLE ZOMATO ADD CLASSIFY_REST VARCHAR(20);

UPDATE ZOMATO
SET CLASSIFY_REST  = (CASE								     	
WHEN  Rating < 2.5 THEN 'POOR'
WHEN Rating >= 2.5 AND Rating < 3.5 THEN 'GOOD'
WHEN Rating >= 3.5 AND Rating < 4.5 THEN 'GREAT'
WHEN Rating >= 4.5 THEN 'EXCELLENT'
END)

SELECT * FROM ZOMATO WHERE CLASSIFY_REST = 'POOR'


CREATE TABLE ZOMATO1 AS (
    SELECT *
    FROM ZOMATO AS Z
    LEFT JOIN COUNTRY_CODE AS C ON Z.COUNTRYCODE = C.COUNTRYCODE
);
``

select * FROM ZOMATO

--ROLLING COUNT OF RESTAURANTS IN INDIAN CITIES
SELECT City,Locality,COUNT(Locality) TOTAL_REST,
SUM(COUNT(Locality)) OVER(PARTITION BY City ORDER BY Locality ) AS ROLL_COUNT
FROM ZOMATO 
WHERE COUNTRYCODE = (SELECT COUNTRYCODE FROM COUNTRY_CODE WHERE COUNTRY = 'India')
GROUP BY City, Locality 


-- PERCENTAGE OF RESTAURANTS IN ALL THE COUNTRIES
SELECT 
    COUNTRYCODE,
    COUNT(RESTAURANTID) AS COUNTS,
    (COUNT(RESTAURANTID) * 100.0 / (SELECT COUNT(*) FROM ZOMATO)) AS PERCENTAGE
FROM 
    ZOMATO
GROUP BY 
    COUNTRYCODE
ORDER BY 
    COUNTS DESC;

--WHICH COUNTRIES AND HOW MANY RESTAURANTS WITH PERCENTAGE PROVIDES ONLINE DELIVERY OPTION

WITH CTE1 AS (
SELECT COUNTRYCODE,COUNT(RESTAURANTID) AS COUNTS,
COUNT(RESTAURANTID) * 100 / (SELECT COUNT(*) FROM ZOMATO) AS PERCENTAGE
FROM ZOMATO WHERE HAS_ONLINE_DELIVERY = TRUE
GROUP BY COUNTRYCODE)
SELECT DISTINCT *  FROM CTE1


--FINDING FROM WHICH CITY AND LOCALITY IN INDIA WHERE THE MAX RESTAURANTS ARE LISTED IN ZOMATO
SELECT CURRENT_SESSION

SELECT  TOP 1 * FROM(
SELECT DISTINCT CITY, LOCALITY, COUNT(RESTAURANTID) As COUNTS FROM ZOMATO
WHERE COUNTRYCODE = 1
GROUP BY CITY, LOCALITY
ORDER BY COUNTS DESC) AS X





--TYPES OF FOODS ARE AVAILABLE IN INDIA WHERE THE MAX RESTAURANTS ARE LISTED IN ZOMATO
SELECT * FROM ZOMATO

---ONE WAY USING SUBQUERY
SELECT Cuisines, LOCALITY, CITY FROM ZOMATO WHERE LOCALITY =
(SELECT TOP 1 LOCALITY  FROM(
SELECT DISTINCT CITY, LOCALITY, COUNT(RESTAURANTID) As COUNTS FROM ZOMATO
WHERE COUNTRYCODE = 1
GROUP BY CITY, LOCALITY
ORDER BY COUNTS DESC) AS X)

--ANOTHER WAY USING CTE
WITH CTE1 AS(
SELECT  * FROM(
SELECT DISTINCT CITY, LOCALITY, COUNT(RESTAURANTID) As COUNTS FROM ZOMATO
WHERE COUNTRYCODE = 1
GROUP BY CITY, LOCALITY
ORDER BY COUNTS DESC) AS X
),
CTE2 AS (
SELECT LocalitY,COUNTS FROM CTE1 WHERE COUNTS = (SELECT MAX(COUNTS) FROM CTE1) ),
CT3 AS (
SELECT Locality, Cuisines FROM ZOMATO
)
SELECT  A.Locality, B.Cuisines
FROM  CTE2 A JOIN CT3 B
ON A.Locality = B.Locality


--MOST POPULAR FOOD IN INDIA WHERE THE MAX RESTAURANTS ARE LISTED IN ZOMATO



SELECT TOP 1 *  FROM(
SELECT DISTINCT CITY, LOCALITY, CUISINES, COUNT(RESTAURANTID) As COUNTS FROM ZOMATO
WHERE COUNTRYCODE = 1
GROUP BY CITY, LOCALITY, CUISINES
ORDER BY COUNTS DESC)AS X


SELECT DISTINCT Cuisines, LOCALITY, CITY FROM ZOMATO WHERE LOCALITY =
(SELECT TOP 1 LOCALITY  FROM(
SELECT DISTINCT CITY, LOCALITY, COUNT(RESTAURANTID) As COUNTS FROM ZOMATO
WHERE COUNTRYCODE = 1
GROUP BY CITY, LOCALITY
ORDER BY COUNTS DESC) AS X)




--WHICH LOCALITIES IN INDIA HAVE THE LOWEST RESTAURANTS LISTED IN ZOMAT0

--USING SUBQUERY
SELECT  *  FROM(
SELECT  CITY,LOCALITY,COUNT(RESTAURANTID) As COUNTS FROM ZOMATO
WHERE COUNTRYCODE = 1
GROUP BY CITY, LOCALITY
ORDER BY CITY )AS X
WHERE COUNTS = 1

--WITH CTE 
WITH CTE1 AS
(SELECT City, Locality, COUNT(RestaurantID) COUNTS FROM ZOMATO WHERE COUNTRYCODE = 1 GROUP BY City, Locality)
SELECT * FROM CTE1 WHERE COUNTS = (SELECT MIN(COUNTS) FROM CTE1) ORDER BY CITY

----HOW MANY RESTAURANTS OFFER A TABLE BOOKING OPTION IN INDIA WHERE THE MAX RESTAURANTS ARE LISTED IN ZOMATO

SELECT  DISTINCT HAS_TABLE_BOOKING , COUNT(RESTAURANTID)FROM ZOMATO WHERE COUNTRYCODE = 1
GROUP BY HAS_TABLE_BOOKING

WITH CTE1 AS
(SELECT DISTINCT HAS_TABLE_BOOKING,LOCALITY,CITY, COUNT(RestaurantID) COUNTS FROM ZOMATO WHERE COUNTRYCODE = 1 GROUP BY HAS_TABLE_BOOKING,LOCALITY,CITY)
SELECT LOCALITY , COUNTS FROM CTE1 WHERE LOCALITY = 'Connaught Place' AND HAS_TABLE_BOOKING = 'YES'

---USING SUBQUERY AND CTE
WITH CTE1 AS (
SELECT  TOP 1 * FROM(
SELECT DISTINCT CITY, LOCALITY, COUNT(RESTAURANTID) As COUNTS FROM ZOMATO
WHERE COUNTRYCODE = 1
GROUP BY CITY, LOCALITY
ORDER BY COUNTS DESC)),
CTE2 AS (
SELECT Locality, Has_Table_booking AS TABLE_BOOKING
FROM ZOMATO
)
SELECT A.Locality, COUNT(A.TABLE_BOOKING) TABLE_BOOKING_OPTION
FROM CTE2 A JOIN CTE1 B
ON A.Locality = B.Locality
WHERE A.TABLE_BOOKING = 'YES'
GROUP BY A.Locality

-- HOW RATING AFFECTS IN MAX LISTED RESTAURANTS WITH AND WITHOUT TABLE BOOKING OPTION (Connaught Place)
SELECT 'WITH_TABLE' TABLE_BOOKING_OPT,COUNT(Has_Table_booking) TOTAL_REST, ROUND(AVG(Rating),2) AVG_RATING
FROM ZOMATO
WHERE Has_Table_booking = 'YES'
AND Locality= 'Connaught Place'
UNION
SELECT 'WITHOUT_TABLE' TABLE_BOOKING_OPT,COUNT(Has_Table_booking) TOTAL_REST, ROUND(AVG(Rating),2) AVG_RATING
FROM ZOMATO
WHERE Has_Table_booking = 'NO'
AND Locality = 'Connaught Place'


--FIND ALL THE RESTAURANTS THOSE WHO ARE OFFERING TABLE BOOKING OPTIONS WITH PRICE RANGE AND HAS HIGH RATING

SELECT RESTAURANTNAME , PRICE_RANGE FROM ZOMATO WHERE HAS_TABLE_BOOKING = 'Yes' AND RATING >=4.5
ORDER BY PRICE_RANGE 

---COUNT OF ABOVE

SELECT COUNT(RESTAURANTNAME),PRICE_RANGE FROM (SELECT RESTAURANTNAME , PRICE_RANGE FROM ZOMATO WHERE HAS_TABLE_BOOKING ='Yes' AND RATING >=4.5
ORDER BY PRICE_RANGE ) AS X
GROUP BY PRICE_RANGE


--FINDING THE BEST RESTAURANTS WITH MODERATE COST FOR TWO IN INDIA HAVING INDIAN CUISINES
SELECT * FROM ZOMATO
WHERE COUNTRYCODE = 1
AND Has_Table_booking = 'YES'
AND Has_Online_delivery = 'YES'
AND Price_range <= 3
AND Votes > 1000
AND Average_Cost_for_two < 1000
AND Rating > 4
AND Cuisines LIKE '%India%'


----AVG RATING OF RESTS LOCATION WISE
SELECT  COUNTRYCODE, City, Locality, 
COUNT(RestaurantID) TOTAL_REST ,ROUND(AVG(CAST(Rating AS DECIMAL)),2) AVG_RATING
FROM zomato
GROUP BY COUNTRYCODE,City,Locality
ORDER BY ROUND(AVG(CAST(Rating AS DECIMAL)),2) DESC

